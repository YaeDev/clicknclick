doctype html
script(src='/assets/js/form.js')
link(rel="stylesheet" href="/assets/css/tags.css")

head
    meta(property='og:title' content="Create Bet - Click n' Click")
    meta(property='og:type' content='website')
    meta(property='og:description' content='Welcome to Click n\' Click, a social website and Discord Bot. Our mission is to make your day happier!')
    meta(name='description' content='Welcome to Click n\' Click, a social website and Discord Bot. Our mission is to make your day happier!')
    meta(name='og:image' content='/assets/img/logo2.png')
    meta(name='theme-color' content='#d2efe6')
    meta(content='width=device-width, initial-scale=1.0' name='viewport')
title Create a Bet - Click n' Click
include ../includes/head.pug
script(type='text/javascript').
script.
  function myFunction() {
    var checkBox = document.getElementById("myCheck");
    var text = document.getElementById("dmcheck");
     if (checkBox.checked == true){
     text.value = "true";
     } else {
     text.value = "false";
    }
  }
    function pass() {

    let form_items = ["userid", "bet", "dmcheck"]
    let data = {}
    for (let form_item of form_items) {
        data[form_item] = $(`#${form_item}`).val()
    }

   let method = "PATCH";
    fetch(`/api/newbet/826507789312327781`, {
        method,
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    }).then(body => body.json()).then(body => {
        if (!body.success) {
            let opts = {
                type: "error",
                text: body.message,
                theme: "sunset",
                timeout: 3500
            }
            if (body.button) {
                opts.buttons = [
                    Noty.button(body.button.text, 'btn btn-success', function () {
                        location.href = body.button.url
                    }),
                ]
            }
            new Noty(opts).show();
        } else {
            if (location.href.includes("/bots/edit")) location.href = `/bots/${data.id}`;
            else location.href = "/"
        }
    })
  }
  
style. 

  body { font-family: 'Inconsolata', monospace;background-color: #303030;background-2: #4F6272;color: #DCE2F9;hover: #adfbff;rimary: #57F287;secondary: #FEE75C;button: #0095e6; }
  #content { margin-top: 130px; width: 100%;}
  h1 {margin: 13px 0;font-size: 58px !important;color: white;text-align: center; }
  h2 {color: white !important;margin-bottom: 0;}
  .container {
    margin-top: 50px;
    margin-left: 20px;
    margin-right: 20px;
  }
  .checkbox {
    width: 100%;
    margin: 15px auto;
    position: relative;
    display: block;
  }

  .checkbox input[type="checkbox"] {
    width: auto;
    opacity: 0.00000001;
    position: absolute;
    left: 0;
    margin-left: -20px;
  }
  .checkbox label {
    position: relative;
  }
  .checkbox label:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    margin: 4px;
    width: 22px;
    height: 22px;
    transition: transform 0.28s ease;
    border-radius: 3px;
    border: 2px solid #7bbe72;
  }
  .checkbox label:after {
  content: '';
    display: block;
    width: 10px;
    height: 5px;
    border-bottom: 2px solid #7bbe72;
    border-left: 2px solid #7bbe72;
    -webkit-transform: rotate(-45deg) scale(0);
    transform: rotate(-45deg) scale(0);
    transition: transform ease 0.25s;
    will-change: transform;
    position: absolute;
    top: 12px;
    left: 10px;
  }
  .checkbox input[type="checkbox"]:checked ~ label::before {
    color: #7bbe72;
  }

  .checkbox input[type="checkbox"]:checked ~ label::after {
    -webkit-transform: rotate(-45deg) scale(1);
    transform: rotate(-45deg) scale(1);
  }

  .checkbox label {
    min-height: 34px;
    display: block;
    padding-left: 40px;
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
    vertical-align: sub;
  }
  .checkbox label span {
    position: absolute;
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  .checkbox input[type="checkbox"]:focus + label::before {
    outline: 0;
  }
  .quantity {
  position: relative;
  }

  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button
  {
  -webkit-appearance: none;
  margin: 0;
  }

  input[type="number"]
  {
  -moz-appearance: textfield;
  }

  .quantity input {
  width: 45px;
  height: 42px;
  line-height: 1.65;
  float: left;
  display: block;
  padding: 0;
  margin: 0;
  padding-left: 20px;
  border: 1px solid #eee;
  }

  .quantity input:focus {
  outline: 0;
  }

  .quantity-nav {
  float: left;
  position: relative;
  height: 42px;
  }

  .quantity-button {
  position: relative;
  cursor: pointer;
  border-left: 1px solid #eee;
  width: 20px;
  text-align: center;
  color: #333;
  font-size: 13px;
  font-family: "Trebuchet MS", Helvetica, sans-serif !important;
  line-height: 1.7;
  -webkit-transform: translateX(-100%);
  transform: translateX(-100%);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
  }

  .quantity-button.quantity-up {
  position: absolute;
  height: 50%;
  top: 0;
  border-bottom: 1px solid #eee;
  }

  .quantity-button.quantity-down {
  position: absolute;
  bottom: -1px;
  height: 50%;
  }
  .myImg {
    display: block;
    position: relative;
    height: 160px;
    border-radius:5px;
    top: 0;
    left: 0;
    right: 0;
    margin: auto;
    background-size: 100%;
    opacity: .9;
    z-index: -1;
  }
body
    include ../includes/nav.pug
    #content
        span.header      
            h1 New Bet
            //support
            
            p In Target ID, put the ID of the user you want to make the bet
        br
        form.center
                .input-holder
                 input#userid.input(maxlength=max_summary_length type='text' placeholder=' ')
                 .placeholder Target ID
                 br
                 .quantity
                  input#bet.input(type='number' min='1' step='1' value=`0`)
                  .placeholder Bet Amount
                 br
                 .container
                  .checkbox
                   input#myCheck(type='checkbox' onclick='myFunction()')
                   label(for='myCheck') 
                    .text Send Direct Message to Target User (Recommended).
                 br
                 input#dmcheck(type='text' placeholder=' ' value='false' style="visibility:hidden")
                 br
                 a.button.button-red.delete(onclick='pass()') Send Bet
        br
        br